@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore

@if (isLoaded)
{
    <CascadingValue Value="@this">
        @ChildContent
    </CascadingValue>
}
else
{
    <p>Loading...</p>
}

@code {
    private bool isLoaded;

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    public string token { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var result = await ProtectedSessionStore.GetAsync<string>("token");
        token = result.Success ? result.Value : "";
        isLoaded = true;
    }

    public async Task SaveChangesAsync()
    {
        await ProtectedSessionStore.SetAsync("token", token);
    }

    public async Task SetTokenAsync(string newToken) {
        await ProtectedSessionStore.SetAsync("token", newToken);
    }

    public async Task DeleteTokenAsync()
    {
        await ProtectedSessionStore.DeleteAsync("token");
        token = "";
    }
}