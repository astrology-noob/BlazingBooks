@page "/"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject OrderState OrderState
@inject BookService BS

<div class="top-bar">
    <NavLink href=@HomePageURI Match="NavLinkMatch.All" class="logo">
        <img src="img/logo.svg" />
    </NavLink>
    <NavLink href="/books" Match="NavLinkMatch.Prefix" class="nav-tab">
        <img src="img/pizza-slice.svg" />
        <div>Get Book</div>
    </NavLink>
</div>

<div class="main">
  <h1>Blazing Books</h1>
  <ul class="pizza-cards">
    @if (books != null)
    {
      @foreach (var book in books)
      {
        <li @onclick="@(() => OrderState.ShowConfigureBookDialog(book, 0))">
            <div class="pizza-info">
            <span class="title">@book.Title</span>
            @book.Author
            <span class="price">@book.GetFormattedBasePrice()</span>
            </div>
        </li>
      }
    }
  </ul>
</div>

@if (OrderState.ShowingConfigureDialog)
{
    <ConfigureBookDialog
      book="OrderState.ConfiguringBook"
      bookCount="OrderState.ConfiguringBookCount"
      OnCancel="OrderState.CancelConfigureBookDialog"
      OnConfirm="OrderState.ConfirmConfigureBookDialog" />
}

<div class="sidebar">
    @if (order.Books.Any())
    {
        <div class="order-contents">
            <h2>Your order</h2>

            @foreach (var bookCountPair in order.Books)
            {
              <div class="cart-item">
                    <a @onclick="@(() => OrderState.RemoveConfiguredBook(bookCountPair.Key))" class="delete-item">x</a>
                    <div class="title">@bookCountPair.Value @bookCountPair.Key.Title</div>
                  <div class="item-price">
                        @(bookCountPair.Value * bookCountPair.Key.Price)
                  </div>
              </div>
            }
        </div>
    }
    else
    {
        <div class="empty-cart">Choose a book<br>to get started</div>
    }

    <div class="order-total @(order.Books.Any() ? "" : "hidden")">
        Total:
        <span class="total-price">@order.GetFormattedTotalPrice()</span>
        <a href="checkout" class="@(OrderState.Order.Books.Count == 0 ? "btn btn-warning disabled" : "btn btn-warning")">
            Order >>
        </a>
    </div>
</div>

@code {
    public string HomePageURI { get; set; }
    List<Book> books = new List<Book>();
    Order order => OrderState.Order;

    protected override async Task OnInitializedAsync()
    {
        books = await BS.GetBooksFromDBAsync();
        HomePageURI = NavigationManager.BaseUri;
    }
}
		