@page "/checkout"
@attribute [Authorize]
@using BlazingBooks.Services
@inject OrderState OrderState
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject BookService BS
@layout TopBarLayout

<div class="main">
    <div class="checkout-main">
        <div class="checkout-order-details">
            <h4>Review order</h4>
            <table>
                <tr>
                    <th>Title</th>
                    <th>Count</th>
                    <th>Sum</th>
                </tr>
                @foreach (var bookCountPair in Order.BooksList)
                {
                    <tr>
                        <td>
                            @bookCountPair.Key.Title
                        </td>
                        <td>
                            @bookCountPair.Value
                        </td>
                        <td>
                            <span class="total-price">@(bookCountPair.Key.Price * bookCountPair.Value)</span>
                        </td>
                    </tr>
                }
            </table>

            <p class="order-total-price">
               Total:
               <span class="total-price">@Order.GetFormattedTotalPrice()</span>
            </p>
        </div>

        <button class="checkout-button btn btn-warning" @onclick="PlaceOrder">
            Order
        </button>
    </div>
</div>

@code {
    Order Order => OrderState.Order;
    public string HomePageURI { get; set; }

    public async Task PlaceOrder()
    {
        foreach (var bookToOrder in OrderState.Order.BooksList)
        {        
            var buyingTask = BS.BuyBooks(bookToOrder);
            await buyingTask;
            buyingTask.Wait();
        }
        
        NavigationManager.NavigateTo("/");
        OrderState.ResetOrder();
    }

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }
}